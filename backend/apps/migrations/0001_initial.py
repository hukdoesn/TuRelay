# Generated by Django 4.2.13 on 2024-09-05 20:25

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Credential',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, verbose_name='凭据名称')),
                ('type', models.CharField(max_length=50, verbose_name='凭据类型')),
                ('account', models.CharField(blank=True, max_length=150, null=True, verbose_name='账户')),
                ('password', models.CharField(blank=True, max_length=128, null=True, verbose_name='密码')),
                ('key', models.TextField(blank=True, null=True, verbose_name='密钥')),
                ('key_password', models.CharField(blank=True, max_length=128, null=True, verbose_name='密钥密码')),
                ('KeyId', models.CharField(blank=True, max_length=255, null=True, verbose_name='API Key')),
                ('KeySecret', models.CharField(blank=True, max_length=255, null=True, verbose_name='API Secret')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'db_table': 't_credential',
            },
        ),
        migrations.CreateModel(
            name='DomainMonitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='监控名称')),
                ('domain', models.CharField(max_length=255, verbose_name='域名')),
                ('connectivity', models.BooleanField(default=False, verbose_name='连通性')),
                ('status_code', models.IntegerField(blank=True, null=True, verbose_name='状态码')),
                ('redirection', models.CharField(blank=True, max_length=255, null=True, verbose_name='重定向地址')),
                ('time_consumption', models.FloatField(blank=True, null=True, verbose_name='耗时（秒）')),
                ('tls_version', models.CharField(blank=True, max_length=50, null=True, verbose_name='TLS 版本')),
                ('http_version', models.CharField(blank=True, max_length=50, null=True, verbose_name='HTTP 版本')),
                ('certificate_days', models.IntegerField(blank=True, null=True, verbose_name='证书剩余天数')),
                ('enable', models.BooleanField(default=True, verbose_name='启用')),
                ('alert', models.BooleanField(default=False, verbose_name='告警')),
                ('monitor_frequency', models.IntegerField(default=60, verbose_name='监控频率（秒）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'db_table': 't_domain_monitor',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='权限名')),
                ('code', models.CharField(max_length=150, unique=True, verbose_name='权限代码')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 't_permission',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=150, unique=True, verbose_name='角色名')),
                ('description', models.TextField(verbose_name='描述')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 't_role',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='用户名')),
                ('name', models.CharField(max_length=150, verbose_name='姓名')),
                ('password', models.CharField(max_length=128, verbose_name='密码')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='邮箱')),
                ('mobile', models.CharField(max_length=15, verbose_name='手机号')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('login_time', models.DateTimeField(blank=True, null=True, verbose_name='最后登录时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 't_user',
            },
        ),
        migrations.CreateModel(
            name='UserLock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_count', models.IntegerField(default=0, verbose_name='登录尝试次数')),
                ('lock_count', models.IntegerField(default=0, verbose_name='尝试锁定次数')),
                ('last_attempt_time', models.DateTimeField(blank=True, null=True, verbose_name='最后尝试时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='apps.user', verbose_name='用户')),
            ],
            options={
                'db_table': 't_user_lock',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=500, verbose_name='令牌')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='apps.user', verbose_name='用户')),
            ],
            options={
                'db_table': 't_token',
            },
        ),
        migrations.CreateModel(
            name='OperationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(max_length=150, verbose_name='操作模块')),
                ('request_interface', models.CharField(max_length=255, verbose_name='请求接口')),
                ('request_method', models.CharField(max_length=10, verbose_name='请求方式')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP地址')),
                ('before_change', models.TextField(blank=True, null=True, verbose_name='变更前')),
                ('after_change', models.TextField(blank=True, null=True, verbose_name='变更后')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.user', verbose_name='操作人员')),
            ],
            options={
                'db_table': 't_operation_log',
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, verbose_name='节点名称')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='apps.node', verbose_name='父节点')),
            ],
            options={
                'db_table': 't_node',
            },
        ),
        migrations.CreateModel(
            name='LoginLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, verbose_name='用户名')),
                ('client_ip', models.GenericIPAddressField(verbose_name='客户端IP')),
                ('login_status', models.BooleanField(default=False, verbose_name='登录状态')),
                ('reason', models.CharField(blank=True, max_length=255, null=True, verbose_name='登录失败原因')),
                ('browser_info', models.CharField(max_length=255, verbose_name='浏览器信息')),
                ('os_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='操作系统信息')),
                ('login_time', models.DateTimeField(auto_now_add=True, verbose_name='登录时间')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apps.user', verbose_name='用户')),
            ],
            options={
                'db_table': 't_login_log',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, verbose_name='主机名称')),
                ('status', models.BooleanField(default=False, verbose_name='连接状态')),
                ('operating_system', models.CharField(max_length=50, verbose_name='操作系统')),
                ('network', models.GenericIPAddressField(verbose_name='IP地址')),
                ('protocol', models.CharField(max_length=10, verbose_name='协议')),
                ('port', models.IntegerField(verbose_name='端口')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('account_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apps.credential', verbose_name='关联凭据')),
                ('node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hosts', to='apps.node', verbose_name='所属节点')),
            ],
            options={
                'db_table': 't_host',
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.permission', verbose_name='权限')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.role', verbose_name='角色')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.user', verbose_name='用户')),
            ],
            options={
                'db_table': 't_role_permission',
                'unique_together': {('user', 'role', 'permission')},
            },
        ),
    ]
